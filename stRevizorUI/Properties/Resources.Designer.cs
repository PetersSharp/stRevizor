//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.2034
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RevizorUI.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RevizorUI.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на повтор: {0} минут.
        /// </summary>
        internal static string fmtBTNStartBusy {
            get {
                return ResourceManager.GetString("fmtBTNStartBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на файл списка реестра сохранен: {0}.
        /// </summary>
        internal static string fmtExportPath {
            get {
                return ResourceManager.GetString("fmtExportPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на файл реестра ненайден: {0}.
        /// </summary>
        internal static string fmtImportNotFound {
            get {
                return ResourceManager.GetString("fmtImportNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на файл импорта данных &apos;{0}&apos; не найден.
        /// </summary>
        internal static string fmtImportOnLoadNotFound {
            get {
                return ResourceManager.GetString("fmtImportOnLoadNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на файл импорта данных &apos;{0}&apos; имеет неверное расширение.
        /// </summary>
        internal static string fmtImportOnLoadNotSupport {
            get {
                return ResourceManager.GetString("fmtImportOnLoadNotSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на файл импорта данных &apos;{0}&apos; загружен, нажмите &apos;Старт&apos; для обработки.
        /// </summary>
        internal static string fmtImportOnLoadPath {
            get {
                return ResourceManager.GetString("fmtImportOnLoadPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на файл реестра выбран: {0}.
        /// </summary>
        internal static string fmtImportPath {
            get {
                return ResourceManager.GetString("fmtImportPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на файл реестра имеет неверное расширение: ({0}) {1}.
        /// </summary>
        internal static string fmtImportTypeError {
            get {
                return ResourceManager.GetString("fmtImportTypeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на найдено: {0}.
        /// </summary>
        internal static string fmtSearchCount {
            get {
                return ResourceManager.GetString("fmtSearchCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на сервер занят обработкой предыдущих данных, повтор через {0} минуты.
        /// </summary>
        internal static string fmtTftpServerBusy {
            get {
                return ResourceManager.GetString("fmtTftpServerBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на сервер не готов принять данные, превышен лимит попыток: {0}.
        /// </summary>
        internal static string fmtTftpServerSkipBusy {
            get {
                return ResourceManager.GetString("fmtTftpServerSkipBusy", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap imgClear {
            get {
                object obj = ResourceManager.GetObject("imgClear", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap imgFolder {
            get {
                object obj = ResourceManager.GetObject("imgFolder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap imgFolderOpen {
            get {
                object obj = ResourceManager.GetObject("imgFolderOpen", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap imgFolderShared {
            get {
                object obj = ResourceManager.GetObject("imgFolderShared", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на обработка реестра остановлена.
        /// </summary>
        internal static string txtBGWCancelled {
            get {
                return ResourceManager.GetString("txtBGWCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на обработка реестра закончена.
        /// </summary>
        internal static string txtBGWCompleted {
            get {
                return ResourceManager.GetString("txtBGWCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на загрузите новый реестр.
        /// </summary>
        internal static string txtBGWNotify {
            get {
                return ResourceManager.GetString("txtBGWNotify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на идет обработка реестра...
        /// </summary>
        internal static string txtBGWProccess {
            get {
                return ResourceManager.GetString("txtBGWProccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на обработка реестра прервана.
        /// </summary>
        internal static string txtBGWProcessAbort {
            get {
                return ResourceManager.GetString("txtBGWProcessAbort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Старт!.
        /// </summary>
        internal static string txtBTNStart {
            get {
                return ResourceManager.GetString("txtBTNStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Стоп!.
        /// </summary>
        internal static string txtBTNStop {
            get {
                return ResourceManager.GetString("txtBTNStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ожидаю...
        /// </summary>
        internal static string txtBTNWait {
            get {
                return ResourceManager.GetString("txtBTNWait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на адрес TFTP сервера не может быть пустым.
        /// </summary>
        internal static string txtErrorProvSetupIpTftp {
            get {
                return ResourceManager.GetString("txtErrorProvSetupIpTftp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на имя файла журнала не может быть пустым.
        /// </summary>
        internal static string txtErrorProvSetupLog {
            get {
                return ResourceManager.GetString("txtErrorProvSetupLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на файл импорта данных не имеет имени.
        /// </summary>
        internal static string txtImportOnLoadEmpty {
            get {
                return ResourceManager.GetString("txtImportOnLoadEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ошибка импорта данных.
        /// </summary>
        internal static string txtImportOnLoadError {
            get {
                return ResourceManager.GetString("txtImportOnLoadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на файл импорта данных &apos;{0}&apos; имеет неизвестный тип.
        /// </summary>
        internal static string txtImportOnLoadNotExportType {
            get {
                return ResourceManager.GetString("txtImportOnLoadNotExportType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на файл импорта данных успешно отправлен на сервер.
        /// </summary>
        internal static string txtImportOnLoadProccessEnd {
            get {
                return ResourceManager.GetString("txtImportOnLoadProccessEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на не выбран файл реестра, register.zip или dump.xml.
        /// </summary>
        internal static string txtImportPathNotComplette {
            get {
                return ResourceManager.GetString("txtImportPathNotComplette", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на обработка реестра выполнена некорректно.
        /// </summary>
        internal static string txtImportProccessNotComplette {
            get {
                return ResourceManager.GetString("txtImportProccessNotComplette", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на обработка реестра не проведена, нажмите кнопку &apos;Старт&apos;.
        /// </summary>
        internal static string txtProccessNotComplette {
            get {
                return ResourceManager.GetString("txtProccessNotComplette", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на вы не ввели IP адрес, поиск невозможен.
        /// </summary>
        internal static string txtSearchErrorIPEmpty {
            get {
                return ResourceManager.GetString("txtSearchErrorIPEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на введенный IP адрес не корректен.
        /// </summary>
        internal static string txtSearchErrorIPNotValid {
            get {
                return ResourceManager.GetString("txtSearchErrorIPNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ревизор не поддерживает IP v6 адреса.
        /// </summary>
        internal static string txtSearchErrorIPV6 {
            get {
                return ResourceManager.GetString("txtSearchErrorIPV6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на поиск невозможен, предыдущий запрос пустой.
        /// </summary>
        internal static string txtSearchErrorQueryEmpty {
            get {
                return ResourceManager.GetString("txtSearchErrorQueryEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на сохранение невозможно, список пуст.
        /// </summary>
        internal static string txtSearchErrorSaveEmpty {
            get {
                return ResourceManager.GetString("txtSearchErrorSaveEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на не определен IP адрес TFTP сервера, обьект &apos;Ревизор&apos; не загружен.
        /// </summary>
        internal static string txtSetupTftpServerNotComplette {
            get {
                return ResourceManager.GetString("txtSetupTftpServerNotComplette", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на сервер готов к обработке новых данных.
        /// </summary>
        internal static string txtTftpServerEndBusy {
            get {
                return ResourceManager.GetString("txtTftpServerEndBusy", resourceCulture);
            }
        }
    }
}
