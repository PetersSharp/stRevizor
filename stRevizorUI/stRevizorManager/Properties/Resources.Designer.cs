//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.2034
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace stRevizor.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("stRevizor.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static System.Drawing.Bitmap ajax_loader3 {
            get {
                object obj = ResourceManager.GetObject("ajax_loader3", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на не выбрана папка для мониторинга, необходимо настроить путь к папке.
        /// </summary>
        internal static string AlertDirEmpty {
            get {
                return ResourceManager.GetString("AlertDirEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на папка для мониторинга не существует, провеьте настройки.
        /// </summary>
        internal static string AlertDirNotFound {
            get {
                return ResourceManager.GetString("AlertDirNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на не выбран период блокировки клиенской сети.
        /// </summary>
        internal static string AlertDropError1 {
            get {
                return ResourceManager.GetString("AlertDropError1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на не удалось передать команду блокировки трафика серверу, сервер занят обраткой предыдущих данных.
        /// </summary>
        internal static string AlertDropError2 {
            get {
                return ResourceManager.GetString("AlertDropError2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на команда блокировки трафика успешно передана серверу.
        /// </summary>
        internal static string AlertDropError3 {
            get {
                return ResourceManager.GetString("AlertDropError3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на локальная ошибка обработки данных, дели во вкладке &apos;Лог&apos;.
        /// </summary>
        internal static string AlertErrorLocal {
            get {
                return ResourceManager.GetString("AlertErrorLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ошибка обработки данных сервером, дели во вкладке &apos;Лог&apos;.
        /// </summary>
        internal static string AlertErrorServer {
            get {
                return ResourceManager.GetString("AlertErrorServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на файл {0}: .
        /// </summary>
        internal static string AlertFileStatError {
            get {
                return ResourceManager.GetString("AlertFileStatError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ошибка обработки данных: {0}.
        /// </summary>
        internal static string AlertOtherError {
            get {
                return ResourceManager.GetString("AlertOtherError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на не удалось передать данные серверу, сервер занят обраткой предыдущих данных.
        /// </summary>
        internal static string AlertSendBusy {
            get {
                return ResourceManager.GetString("AlertSendBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на полученный реестр передан серверу на обработку.
        /// </summary>
        internal static string AlertSendSuccess {
            get {
                return ResourceManager.GetString("AlertSendSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на отключено.
        /// </summary>
        internal static string ButtonDisabled {
            get {
                return ResourceManager.GetString("ButtonDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Настройки.
        /// </summary>
        internal static string ButtonSetup {
            get {
                return ResourceManager.GetString("ButtonSetup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Старт.
        /// </summary>
        internal static string ButtonStart {
            get {
                return ResourceManager.GetString("ButtonStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Стоп.
        /// </summary>
        internal static string ButtonStop {
            get {
                return ResourceManager.GetString("ButtonStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Блокировать.
        /// </summary>
        internal static string ButtonTimerDrop {
            get {
                return ResourceManager.GetString("ButtonTimerDrop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на поле не может быть пустым.
        /// </summary>
        internal static string ErrPrvTextEmpty {
            get {
                return ResourceManager.GetString("ErrPrvTextEmpty", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap firewall {
            get {
                object obj = ResourceManager.GetObject("firewall", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на весь трафик клиенской сети блокирован: {0} мин..
        /// </summary>
        internal static string fmtStatusDropStart {
            get {
                return ResourceManager.GetString("fmtStatusDropStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на установлена папка в которой ищется файл реестра: .
        /// </summary>
        internal static string FolderPath {
            get {
                return ResourceManager.GetString("FolderPath", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap imgClear {
            get {
                object obj = ResourceManager.GetObject("imgClear", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap imgFolder {
            get {
                object obj = ResourceManager.GetObject("imgFolder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap imgFolderOpen {
            get {
                object obj = ResourceManager.GetObject("imgFolderOpen", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap imgFolderShared {
            get {
                object obj = ResourceManager.GetObject("imgFolderShared", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap imgResendServer {
            get {
                object obj = ResourceManager.GetObject("imgResendServer", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на мониторинг папки в которой ищется файл реестра запущен.
        /// </summary>
        internal static string LogManagerStart {
            get {
                return ResourceManager.GetString("LogManagerStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на мониторинг папки в которой ищется файл реестра остановлен.
        /// </summary>
        internal static string LogManagerStop {
            get {
                return ResourceManager.GetString("LogManagerStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на повторная попытка отправки данных...
        /// </summary>
        internal static string LogResend {
            get {
                return ResourceManager.GetString("LogResend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка нити процесса: {0} -&gt; {1}.
        /// </summary>
        internal static string LogTaskError {
            get {
                return ResourceManager.GetString("LogTaskError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на обнаружен новый файл: {0} размер: {1}.
        /// </summary>
        internal static string LogWatchFileFound {
            get {
                return ResourceManager.GetString("LogWatchFileFound", resourceCulture);
            }
        }
        
        internal static System.Drawing.Icon security_firewall_logo {
            get {
                object obj = ResourceManager.GetObject("security_firewall_logo", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon security_firewall_logo1 {
            get {
                object obj = ResourceManager.GetObject("security_firewall_logo1", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon security_firewall_logo2 {
            get {
                object obj = ResourceManager.GetObject("security_firewall_logo2", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon security_firewall_off {
            get {
                object obj = ResourceManager.GetObject("security_firewall_off", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon security_firewall_on {
            get {
                object obj = ResourceManager.GetObject("security_firewall_on", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на тип сервера FTP.
        /// </summary>
        internal static string ServerTypeFTP {
            get {
                return ResourceManager.GetString("ServerTypeFTP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на тип сервера TFTP.
        /// </summary>
        internal static string ServerTypeTFTP {
            get {
                return ResourceManager.GetString("ServerTypeTFTP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на параметры сервера сохранены.
        /// </summary>
        internal static string SetupSave {
            get {
                return ResourceManager.GetString("SetupSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на менаджер запущен.
        /// </summary>
        internal static string StatusManagerStart {
            get {
                return ResourceManager.GetString("StatusManagerStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на менаджер остановлен.
        /// </summary>
        internal static string StatusManagerStop {
            get {
                return ResourceManager.GetString("StatusManagerStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на лог сохранен в файл: {0}.
        /// </summary>
        internal static string StatusSaveLog {
            get {
                return ResourceManager.GetString("StatusSaveLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на статус: .
        /// </summary>
        internal static string StatusString1 {
            get {
                return ResourceManager.GetString("StatusString1", resourceCulture);
            }
        }
    }
}
